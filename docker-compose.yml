version: '3.8'

services:
  fastapi:
    build: .
    # If you don't have a Dockerfile, uncomment the next line and modify as needed
    # image: tiangolo/uvicorn-gunicorn-fastapi:python3.9
    container_name: fastapi-app
    restart: unless-stopped
    environment:
      - PORT=8000
    expose:
      - "8000"
    networks:
      - app-network
    # Uncomment if you need to mount local files
    # volumes: # Keep this commented by default
    #   - ./app:/app 

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      # HTTP to HTTPS redirection (always enabled with this configuration)
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    environment:
      # Control SSL enabling: set to 'true' to enable Let's Encrypt and HTTP to HTTPS redirection
      - ENABLE_SSL=${ENABLE_SSL:-false}
      # Hostname for Traefik and FastAPI services (e.g., yourdomain.com)
      - HOSTNAME=${HOSTNAME:-localhost}
      # Email for Let's Encrypt certificates
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-change@example.com}
      # DNS Challenge Provider (e.g., cloudflare, digitalocean, route53)
      - DNS_CHALLENGE_PROVIDER=${DNS_CHALLENGE_PROVIDER:-cloudflare}
      # Cloudflare DNS challenge credentials
      - CF_API_EMAIL=${CF_API_EMAIL:-}
      - CF_API_KEY=${CF_API_KEY:-}
      # Alternative: use CF_DNS_API_TOKEN instead of CF_API_KEY
      # - CF_DNS_API_TOKEN=your-cloudflare-dns-api-token
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_PROVIDER=${DNS_CHALLENGE_PROVIDER:-cloudflare}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${LETSENCRYPT_EMAIL:-change@example.com}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      # Traefik Dashboard HTTP Router
      - "traefik.http.routers.dashboard-http.rule=Host(`traefik.${HOSTNAME}`)"
      - "traefik.http.routers.dashboard-http.entrypoints=web"
      - "traefik.http.routers.dashboard-http.service=api@internal"
      # Traefik Dashboard HTTPS Router
      - "traefik.http.routers.dashboard-https.rule=Host(`traefik.${HOSTNAME}`)"
      - "traefik.http.routers.dashboard-https.entrypoints=websecure"
      - "traefik.http.routers.dashboard-https.tls.certresolver=letsencrypt" # This will only work if ENABLE_SSL is true
      - "traefik.http.routers.dashboard-https.service=api@internal"

networks:
  app-network:
    driver: bridge

volumes:
  letsencrypt:
    driver: local
